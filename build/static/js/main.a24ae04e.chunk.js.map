{"version":3,"sources":["global/TasksContext.js","components/FlexColumn.js","components/FlexRow.js","components/Task.js","components/Msg.js","components/Form.js","pages/ListTasks.js","App.js","index.js"],"names":["TasksContext","createContext","TasksProvider","children","useState","tasks","setTasks","task","setTask","Provider","value","completeTask","taskId","find","id","index","indexOf","updatedTask","completed","map","deleteTask","filter","addTask","e","preventDefault","Math","floor","random","name","FlexColumn","className","FlexRow","Task","onClick","Msg","Form","onSubmit","onChange","type","required","ListTasks","useContext","useEffect","tasksData","JSON","parse","localStorage","getItem","setItem","stringify","target","length","clear","window","location","reload","style","marginRight","updatedTasks","key","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a24ae04e.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const TasksContext = createContext();\r\n\r\nexport const TasksProvider = ({ children }) => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [task, setTask] = useState(\"\");\r\n\r\n    //UPDATE\r\n    const completeTask = taskId => {\r\n        const task = tasks.find(task => task.id === taskId);\r\n        const index = tasks.indexOf(task);\r\n        const updatedTask = { ...task, completed: true };\r\n        tasks[index] = updatedTask;\r\n\r\n        setTasks(tasks.map(task => (task.id === taskId ? updatedTask : task)));\r\n    };\r\n\r\n    //DELETE\r\n    const deleteTask = taskId => {\r\n        setTasks(tasks.filter(task => task.id !== taskId));\r\n    };\r\n\r\n    //ADD\r\n    const addTask = e => {\r\n        e.preventDefault();\r\n\r\n        setTasks([\r\n            ...tasks,\r\n            {\r\n                id: Math.floor(Math.random() * 100 + 1),\r\n                name: task,\r\n                completed: false\r\n            }\r\n        ]);\r\n\r\n        setTask(\"\");\r\n    };\r\n\r\n    return (\r\n        <TasksContext.Provider\r\n            value={{\r\n                completeTask,\r\n                deleteTask,\r\n                addTask,\r\n                tasks,\r\n                task,\r\n                setTasks,\r\n                setTask\r\n            }}\r\n        >\r\n            {children}\r\n        </TasksContext.Provider>\r\n    );\r\n};\r\n","import React from \"react\";\n\nconst FlexColumn = ({ children }) => {\n    return <div className=\"flex-column\">{children}</div>;\n};\n\nexport default FlexColumn;\n","import React from \"react\";\n\nconst FlexRow = ({ children }) => {\n    return <div className=\"flex-row\">{children}</div>;\n};\n\nexport default FlexRow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Task = ({ task, completeTask, deleteTask }) => {\n    return (\n        <div className=\"task\">\n            <span\n                className={\n                    task.completed\n                        ? \"task__name task__name--completed\"\n                        : \"task__name\"\n                }\n                onClick={completeTask}\n            >\n                {task.name}\n            </span>\n            <span className=\"task__delete\" onClick={deleteTask}>\n                X\n            </span>\n        </div>\n    );\n};\n\nTask.propTypes = {\n    task: PropTypes.object.isRequired\n};\n\nexport default Task;\n","import React from \"react\";\n\nconst Msg = ({ children }) => {\n    return (\n        <div className=\"msg\">\n            <p className=\"msg__text\">{children}</p>\n        </div>\n    );\n};\n\nexport default Msg;\n","import React from \"react\";\r\n\r\nconst Form = ({ onSubmit, value, onChange }) => {\r\n    return (\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n            <div className=\"form__group\">\r\n                <label className=\"form__label\">Tarefa</label>\r\n                <div className=\"form__input--aux\">\r\n                    <input\r\n                        className=\"form__input\"\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        required\r\n                    />\r\n                    <button className=\"btn btn--secondary\">+</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { TasksContext } from \"../global/TasksContext\";\r\nimport FlexColumn from \"../components/FlexColumn\";\r\nimport FlexRow from \"../components/FlexRow\";\r\nimport Task from \"../components/Task\";\r\nimport Msg from \"../components/Msg\";\r\nimport Form from \"../components/Form\";\r\n\r\nconst ListTasks = () => {\r\n    const { tasks, setTasks } = useContext(TasksContext);\r\n    const { task, setTask } = useContext(TasksContext);\r\n    const { completeTask, deleteTask, addTask } = useContext(TasksContext);\r\n\r\n    //LOCAL STORAGE GET\r\n    useEffect(() => {\r\n        const tasksData = JSON.parse(localStorage.getItem(\"tasks\"));\r\n\r\n        if (tasksData) {\r\n            setTasks(tasksData);\r\n        }\r\n    }, [setTasks]);\r\n\r\n    //LOCAL STORAGE SET\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks, task]);\r\n\r\n    //CLEAR ALL TASKS\r\n    const clearAll = () => {\r\n        localStorage.clear();\r\n        window.location.reload();\r\n    };\r\n\r\n    //CLEAR COMPLETED TASKS\r\n    const clearCompleted = () => {\r\n        const tasksCompleted = JSON.parse(localStorage.getItem(\"tasks\"));\r\n        const updatedTasks = tasksCompleted.filter(\r\n            task => task.completed === false\r\n        );\r\n\r\n        localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>Lista de tarefas</h2>\r\n            <Form\r\n                onSubmit={addTask}\r\n                value={task}\r\n                onChange={e => setTask(e.target.value)}\r\n            />\r\n            {tasks.length > 0 ? (\r\n                <>\r\n                    <Msg>\r\n                        {`Tens ${tasks.length} ${\r\n                            tasks.length > 1 ? \"tarefas\" : \"tarefa\"\r\n                        } por completar`}\r\n                    </Msg>\r\n                    <FlexColumn>\r\n                        <FlexRow>\r\n                            <button\r\n                                className=\"btn btn--primary\"\r\n                                onClick={clearAll}\r\n                                style={{ marginRight: 20 }}\r\n                            >\r\n                                Limpar tudo\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn--primary\"\r\n                                onClick={clearCompleted}\r\n                            >\r\n                                Limpar completas\r\n                            </button>\r\n                        </FlexRow>\r\n                        {tasks.map(task => (\r\n                            <Task\r\n                                task={task}\r\n                                key={task.id}\r\n                                completeTask={() => completeTask(task.id)}\r\n                                deleteTask={() => deleteTask(task.id)}\r\n                            />\r\n                        ))}\r\n                    </FlexColumn>\r\n                </>\r\n            ) : (\r\n                <Msg>Não tens tarefas pendentes!</Msg>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListTasks;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport \"./scss/main.scss\";\nimport ListTasks from \"./pages/ListTasks\";\n\nconst App = () => {\n    return (\n        <div className=\"container\">\n            <Switch>\n                <Route path=\"/\" exact component={ListTasks} />\n            </Switch>\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { TasksProvider } from \"./global/TasksContext\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <TasksProvider>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </TasksProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}